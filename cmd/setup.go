package cmd

import (
	"fmt"
	"os"
	"runtime"

	"github.com/spf13/cobra"
)

func createFile(filename, content string) error {
	return os.WriteFile(filename, []byte(content), 0644)
}

var (
	arch = runtime.GOARCH
)

var dockerContentTemplate = `
version: '3.8'

services:
  atrean-backend:
    image: aryanshaw542/%s
    container_name: atrean-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - hushl-network

  atrean-dbt-backend:
    image: aryanshaw542/%s
    container_name: atrean-dbt-backend
    restart: unless-stopped
    ports:
      - "8001:8001"
    env_file:
      - .env
    networks:
      - hushl-network
    depends_on:
      - atrean-backend

  atrean-frontend:
    image: aryanshaw542/%s
    container_name: atrean-ui
    restart: unless-stopped
    ports:
      - "80:80"
    env_file:
      - .env
    networks:
      - hushl-network
    depends_on:
      - atrean-backend
      - atrean-dbt-backend

networks:
  hushl-network:
    driver: bridge

`

var envContent = `
OPENAI_API_KEY=YOUR_OPENAI_API_KEY
OPENAI_MODEL_NAME=gpt-4o

COHERE_API_KEY=YOUR_COHERE_API_KEY

PINECONE_API_KEY=YOUR_PINECONE_API_KEY

PERPLEXITY_API_KEY=YOUR_PERPLEXITY_API_KEY

CSV_PINECONE_API_KEY=YOUR_CSV_PINECONE_API_KEY
CSV_PINECONE_API_KEY_ALTERNATE=YOUR_CSV_PINECONE_API_KEY_ALTERNATE

PINECONE_INDEX_NAME=YOUR_PINECONE_INDEX_NAME

DATA_DICTIONARY_PINECONE_INDEX_NAME=YOUR_DATA_DICTIONARY_PINECONE_INDEX_NAME
CATEGORICAL_PINECONE_INDEX_NAME=YOUR_CATEGORICAL_PINECONE_INDEX_NAME
GOLDEN_SQL_PINECONE_INDEX_NAME=YOUR_GOLDEN_SQL_PINECONE_INDEX_NAME
ANALYTICS_PINECONE_INDEX_NAME=YOUR_ANALYTICS_PINECONE_INDEX_NAME
UNSTRUCTURED_PINECONE_INDEX_NAME=YOUR_UNSTRUCTURED_PINECONE_INDEX_NAME
DECISION_BOARD_PINECONE_INDEX_NAME=YOUR_DECISION_BOARD_PINECONE_INDEX_NAME
PUBLIC_PINECONE_INDEX_NAME=YOUR_PUBLIC_PINECONE_INDEX_NAME

DATA_DICTIONARY_PINECONE_NAMESPACE_SUFFIX=YOUR_DATA_DICTIONARY_PINECONE_NAMESPACE_SUFFIX
CATAGORICAL_PINECONE_NAMESPACE_SUFFIX=YOUR_CATAGORICAL_PINECONE_NAMESPACE_SUFFIX
GOLDEN_SQL_PINECONE_NAMESPACE_SUFFIX=YOUR_GOLDEN_SQL_PINECONE_NAMESPACE_SUFFIX
ANALYTICS_PINECONE_NAMESPACE_SUFFIX=YOUR_ANALYTICS_PINECONE_NAMESPACE_SUFFIX
UNSTRUCTURED_PINECONE_NAMESPACE_SUFFIX=YOUR_UNSTRUCTURED_PINECONE_NAMESPACE_SUFFIX
DECISION_BOARD_PINECONE_NAMESPACE_SUFFIX=YOUR_DECISION_BOARD_PINECONE_NAMESPACE_SUFFIX
PUBLIC_STRUCTURED_PINECONE_NAMESPACE_SUFFIX=YOUR_PUBLIC_STRUCTURED_PINECONE_NAMESPACE_SUFFIX
PUBLIC_UNSTRUCTURED_PINECONE_NAMESPACE_SUFFIX=YOUR_PUBLIC_UNSTRUCTURED_PINECONE_NAMESPACE_SUFFIX

AWS_REGION=YOUR_AWS_REGION
AWS_S3_BUCKET=YOUR_AWS_S3_BUCKET
AWS_SECRET_KEY=YOUR_AWS_SECRET_KEY
AWS_ACCESS_KEY=YOUR_AWS_ACCESS_KEY
AWS_S3_URI=YOUR_AWS_S3_URI

GOOGLE_API_KEY=YOUR_GOOGLE_API_KEY
GOOGLE_CLIENT_ID=YOUR_GOOGLE_CLIENT_ID

GOOGLE_REDIRECT_URI=YOUR_GOOGLE_REDIRECT_URI
GOOGLE_REDIRECT_URI_USER=YOUR_GOOGLE_REDIRECT_URI_USER

GOOGLE_CLIENT_SECRET=YOUR_GOOGLE_CLIENT_SECRET
GOOGLE_PROJECT_ID=YOUR_GOOGLE_PROJECT_ID
GOOGLE_AUTH_URI=YOUR_GOOGLE_AUTH_URI
GOOGLE_TOKEN_URI=YOUR_GOOGLE_TOKEN_URI
GOOGLE_AUTH_PROVIDER_X509_CERT_URL=YOUR_GOOGLE_AUTH_PROVIDER_X509_CERT_URL


GPT_MODEl_NAME=gpt-4o

MONGO_USERNAME=YOUR_MONGO_USERNAME
MONGO_PASSWORD=YOUR_MONGO_PASSWORD
MONGODB_URI=YOUR_MONGODB_URI
# DB_TYPE=dev 
DB_TYPE=dev

GROQ_API_KEY=YOUR_GROQ_API_KEY
GROQ_MODEL_NAME=YOUR_GROQ_MODEL_NAME

# API SECRET FOR OUR APP ON SLACK
SLACK_API_ENDPOINT=YOUR_SLACK_API_ENDPOINT
SLACK_API_SECRET=YOUR_SLACK_API_SECRET

# Add to your .env file
SLACK_CLIENT_ID=YOUR_SLACK_CLIENT_ID
SLACK_CLIENT_SECRET=YOUR_SLACK_CLIENT_SECRET
SLACK_REDIRECT_URI=YOUR_SLACK_REDIRECT_URI
SLACK_SIGNIN_SECRET=YOUR_SLACK_SIGNIN_SECRET
SLACK_BOT_USER_ID=YOUR_SLACK_BOT_USER_ID

# PAID TWITTER CREDS:
TWITTER_CLIENT_ID=YOUR_TWITTER_CLIENT_ID
TWITTER_CLIENT_SECRET=YOUR_TWITTER_CLIENT_SECRET

TWITTER_BEARER_TOKEN=YOUR_TWITTER_BEARER_TOKEN

TWITTER_CALLBACK_URI=YOUR_TWITTER_CALLBACK_URI
TWITTER_REDIRECT_URI=YOUR_TWITTER_REDIRECT_URI

JWT_SECRET=YOUR_JWT_SECRET

# PROD TEST
TWITTER_CLIENT_ID=YOUR_TWITTER_CLIENT_ID
TWITTER_CLIENT_SECRET=YOUR_TWITTER_CLIENT_SECRET
TWITTER_ACCESS_TOKEN=YOUR_TWITTER_ACCESS_TOKEN
TWITTER_ACCESS_SECRET=YOUR_TWITTER_ACCESS_SECRET
TWITTER_API_KEY=YOUR_TWITTER_API_KEY
TWITTER_API_KEY_SECRET=YOUR_TWITTER_API_KEY_SECRET
TWITTER_BEARER_TOKEN=YOUR_TWITTER_BEARER_TOKEN

TWITTER_CALLBACK_URI=YOUR_TWITTER_CALLBACK_URI
TWITTER_REDIRECT_URI=YOUR_TWITTER_REDIRECT_URI

CLAUDE_API_KEY=YOUR_CLAUDE_API_KEY
CLAUDE_CACHE_MODEL_NAME=claude-3-7-sonnet-latest
CLAUDE_MODEL_NAME=claude-3-7-sonnet-latest

AIRBYTE_ACCESS_TOKEN=YOUR_AIRBYTE_ACCESS_TOKEN
AIRBYTE_CLIENT_ID=YOUR_AIRBYTE_CLIENT_ID
AIRBYTE_CLIENT_SECRET=YOUR_AIRBYTE_CLIENT_SECRET

AIRBYTE_API_HOST=https://YOUR_AIRBYTE_DOMAIN/api
AIRBYTE_OPEN_API=https://YOUR_AIRBYTE_DOMAIN/api/v1/openapi

FIVETRAN_API_KEY=YOUR_FIVETRAN_API_KEY
FIVETRAN_SECRET_KEY=YOUR_FIVETRAN_SECRET_KEY
FIVETRAN_BASE_API_KEY=YOUR_FIVETRAN_BASE_API_KEY
FIVETRAN_API_URL=https://api.fivetran.com/v1

HUGGINGFACEHUB_API_TOKEN=YOUR_HUGGINGFACEHUB_API_TOKEN
DEMO_COMPANY_ID=YOUR_DEMO_COMPANY_ID
DEMO_COMPANY_NAME=demo

DBT_API_SERVICE_URL=http://localhost:8001/dbt
FRONTEND_URL=http://localhost
PUBLIC_FRONTEND_URL_STAGING=https://YOUR_STAGING_URL
PUBLIC_FRONTEND_URL_PRODUCTION=http://localhost
PUBLIC_FRONTEND_URL_DEVELOPMENT=http://localhost
PUBLIC_FRONTEND_AGENT_URL=https://YOUR_AGENT_URL

GUPSHUP_URL=https://api.gupshup.io/wa/api/v1/msg
GUPSHUP_WHATSAPP_NUMBER=YOUR_GUPSHUP_WHATSAPP_NUMBER
GUPSHUP_API_KEY=YOUR_GUPSHUP_API_KEY
GUPSHUP_SOURCE_NAME=YOUR_GUPSHUP_SOURCE_NAME

ELEVENLABS_API_KEY=YOUR_ELEVENLABS_API_KEY
ELEVENLABS_VOICE_ID=YOUR_ELEVENLABS_VOICE_ID

CLICKHOUSE_HOST=YOUR_CLICKHOUSE_HOST
CLICKHOUSE_PORT=YOUR_CLICKHOUSE_PORT
CLICKHOUSE_PORT_AIRBYTE=YOUR_CLICKHOUSE_PORT_AIRBYTE
CLICKHOUSE_USERNAME=YOUR_CLICKHOUSE_USERNAME
CLICKHOUSE_PASSWORD=YOUR_CLICKHOUSE_PASSWORD

DEEPSEEK_API_KEY=YOUR_DEEPSEEK_API_KEY
DEEPSEEK_MODEL_NAME=YOUR_DEEPSEEK_MODEL_NAME

GCP_REGION=YOUR_GCP_REGION
GCP_STORAGE_BUCKET=YOUR_GCP_STORAGE_BUCKET
GCP_STORAGE_URI=YOUR_GCP_STORAGE_URI
SENDGRID_API_KEY=YOUR_SENDGRID_API_KEY
SENDGRID_SENDER_EMAIL=YOUR_SENDGRID_SENDER_EMAIL
GCP_SERVICE_ACCOUNT_CREDENTIALS=YOUR_GCP_SERVICE_ACCOUNT_CREDENTIALS

ONEDRIVE_REDIRECT_URL=http://localhost:8000/onedrive/callback
ONEDRIVE_CLIENT_ID=YOUR_ONEDRIVE_CLIENT_ID
ONEDRIVE_CLIENT_SECRET=YOUR_ONEDRIVE_CLIENT_SECRET
ONEDRIVE_TENANT_ID=YOUR_ONEDRIVE_TENANT_ID

DBT_HOST=YOUR_DBT_HOST
DBT_PORT=YOUR_DBT_PORT
DBT_USER=YOUR_DBT_USER
DBT_PASSWORD=YOUR_DBT_PASSWORD

DBT_DATABASE=YOUR_DBT_DATABASE
DBT_SCHEMA=YOUR_DBT_SCHEMA
DBT_EXECUTE=True

VITE_APP_BASE_URL=http://localhost:8000
VITE_APP_CHAT_WEBSOCKET_URL=ws://localhost:8000/chatv2/


VITE_APP_OPENAI_API_KEY=YOUR_VITE_APP_OPENAI_API_KEY
VITE_APP_CALENDLY_URL=YOUR_VITE_APP_CALENDLY_URL
VITE_APP_IPINFO_KEY=YOUR_VITE_APP_IPINFO_KEY
`

var setupCmd = &cobra.Command{
	Use:   "setup",
	Short: "Set up Docker Compose and .env file",
	Run: func(cmd *cobra.Command, args []string) {
		fmt.Println("Setting up your Atrean environment...")

		atreanBackendAMDArch64ImageName := "atrean-backend:amd64-v1.0.0"
		atreanBackendARMArch64ImageName := "atrean-backend:v1.0.0"

		atreanDbtBackendAMDArch64ImageName := "atrean-dbt-backend:amd64-v1.0.0"
		atreanDbtBackendARMArch64ImageName := "atrean-dbt-backend:latest"

		atreanFrontendAMDArch64ImageName := "atrean-ui:amd64-v1.0.0"
		atreanFrontendARMArch64ImageName := "atrean-ui:latest"

		var dockerContent string
		fmt.Println("Architecture detected: ", arch)

		if arch == "amd64" {
			dockerContent = fmt.Sprintf(dockerContentTemplate, atreanBackendAMDArch64ImageName, atreanDbtBackendAMDArch64ImageName, atreanFrontendAMDArch64ImageName)
		} else {
			dockerContent = fmt.Sprintf(dockerContentTemplate, atreanBackendARMArch64ImageName, atreanDbtBackendARMArch64ImageName, atreanFrontendARMArch64ImageName)
		}

		if err := createFile("docker-compose.yml", dockerContent); err != nil {
			fmt.Println("Failed to write docker-compose.yml:", err)
		}
		if err := createFile(".env", envContent); err != nil {
			fmt.Println("Failed to write .env file:", err)
		}

		fmt.Println("Setup complete! You can now run: atrean up")
	},
}

func init() {
	rootCmd.AddCommand(setupCmd)
}
